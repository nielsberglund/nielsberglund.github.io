<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windbg on Niels Berglund</title>
    <link>/tags/windbg/</link>
    <description>Recent content in Windbg on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 04 Aug 2018 16:05:46 +0200</lastBuildDate>
    
	<atom:link href="/tags/windbg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>sp_execute_external_script and SQL Compute Context - III</title>
      <link>/2018/08/04/sp_execute_external_script-and-sql-compute-context---iii/</link>
      <pubDate>Sat, 04 Aug 2018 16:05:46 +0200</pubDate>
      
      <guid>/2018/08/04/sp_execute_external_script-and-sql-compute-context---iii/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;/2018/03/21/microsoft-sql-server-r-services---sp_execute_external_script---iii/&#34;&gt;Microsoft SQL Server R Services - sp_execute_external_script - III&lt;/a&gt; post I wrote about &lt;code&gt;sp_execute_external_script&lt;/code&gt; (SPEES) and the &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt; (SQLCC). Afterwards I realised I had some things wrong, so I wrote a followup post: &lt;a href=&#34;/2018/05/20/sp_execute_external_script-and-sql-compute-context---i/&#34;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt; where I tried to correct my mistakes from the &lt;a href=&#34;/2018/03/21/microsoft-sql-server-r-services---sp_execute_external_script---iii/&#34;&gt;initial post&lt;/a&gt;. That post led to &lt;a href=&#34;/2018/07/07/sp_execute_external_script-and-sql-compute-context---ii/&#34;&gt;sp_execute_external_script and SQL Compute Context - II&lt;/a&gt; and now we have a mini-series.&lt;/p&gt;

&lt;p&gt;To see other posts (including this) in the series, go to &lt;a href=&#34;/spees_and_sql_compute_context&#34;&gt;&lt;strong&gt;sp_execute_external_script and SQL Server Compute Context&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the previous post in this series, we looked at how data is sent to the SqlSatellite from SQL Server when we are in the SQLCC. This post was meant to look at what goes on inside SQL Server when we execute in SQLCC, but I realised that it would make more sense if, before we look at the internal working when in SQLCC, I covered what happens when pulling data in the local context. So that is what this post is all about.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XX</title>
      <link>/2018/02/02/microsoft-sql-server-r-services---internals-xx/</link>
      <pubDate>Fri, 02 Feb 2018 19:48:22 +0200</pubDate>
      
      <guid>/2018/02/02/microsoft-sql-server-r-services---internals-xx/</guid>
      <description>&lt;p&gt;This is the 21:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, (it is now called &lt;strong&gt;Microsoft SQL Server Machine Learning Services&lt;/strong&gt;), and the 20:th post that drills down into the internal of how it works.&lt;/p&gt;

&lt;p&gt;Wow, 20 posts about internals - when I started this &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt; series, I thought I might achieve five or six posts. I would never have - in my wildest fantasies - thought I would reach twenty!&lt;/p&gt;

&lt;p&gt;To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are however now coming closer to the end of this whole series, and this post is the last for &lt;strong&gt;Internals&lt;/strong&gt;. After this post, I foresee one, possibly two, more posts about other things related to &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;  - and then we are done!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XIX</title>
      <link>/2018/01/20/microsoft-sql-server-r-services---internals-xix/</link>
      <pubDate>Sat, 20 Jan 2018 19:42:49 +0200</pubDate>
      
      <guid>/2018/01/20/microsoft-sql-server-r-services---internals-xix/</guid>
      <description>&lt;p&gt;This is the 20:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 19:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are nearing the end of the &lt;strong&gt;Internals&lt;/strong&gt; series, and if we look at what we have covered, we have almost come full circle.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XVIII</title>
      <link>/2018/01/10/microsoft-sql-server-r-services---internals-xviii/</link>
      <pubDate>Wed, 10 Jan 2018 10:19:41 +0200</pubDate>
      
      <guid>/2018/01/10/microsoft-sql-server-r-services---internals-xviii/</guid>
      <description>&lt;p&gt;This is the 19:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 18:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post we&amp;rsquo;ll continue looking at data coming back to SQL Server, and what happens code-wise in SQL.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XVII</title>
      <link>/2018/01/03/microsoft-sql-server-r-services---internals-xvii/</link>
      <pubDate>Wed, 03 Jan 2018 09:57:38 +0200</pubDate>
      
      <guid>/2018/01/03/microsoft-sql-server-r-services---internals-xvii/</guid>
      <description>&lt;p&gt;This is the 18:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 17:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The last &lt;em&gt;Internals&lt;/em&gt; posts have discussed the transport of data between SQL Server and the SqlSatellite. In &lt;a href=&#34;/2017/12/24/microsoft-sql-server-r-services---internals-xvi/&#34;&gt;Internals - XVI&lt;/a&gt; we looked at how data came back from the SqlSatellite, and what the data looked like.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XVI</title>
      <link>/2017/12/24/microsoft-sql-server-r-services---internals-xvi/</link>
      <pubDate>Sun, 24 Dec 2017 08:02:00 +0200</pubDate>
      
      <guid>/2017/12/24/microsoft-sql-server-r-services---internals-xvi/</guid>
      <description>&lt;p&gt;This is the 17:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 16:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the last few posts in this &lt;em&gt;Internals&lt;/em&gt; series we have looked at how data is being transported from SQL Server to the SqlSatellite. In this post we&amp;rsquo;ll look at how data is going the other way, from the SqlSatellite to SQL Server.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XV</title>
      <link>/2017/12/02/microsoft-sql-server-r-services---internals-xv/</link>
      <pubDate>Sat, 02 Dec 2017 05:41:23 +0200</pubDate>
      
      <guid>/2017/12/02/microsoft-sql-server-r-services---internals-xv/</guid>
      <description>&lt;p&gt;This is the 16:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 15:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the last post &lt;a href=&#34;/2017/11/25/microsoft-sql-server-r-services---internals-xiv/&#34;&gt;Internals - XIV&lt;/a&gt; we looked at the &lt;strong&gt;Binary eXchange Protocol&lt;/strong&gt; (&lt;strong&gt;BXL&lt;/strong&gt;). The post was fairly long, and there were things that I wanted to cover which I didn&amp;rsquo;t do due to the length of the post.&lt;/p&gt;

&lt;p&gt;So this post is a continuation of &lt;a href=&#34;/2017/11/25/microsoft-sql-server-r-services---internals-xiv/&#34;&gt;Internals - XIV&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XIV</title>
      <link>/2017/11/25/microsoft-sql-server-r-services---internals-xiv/</link>
      <pubDate>Sat, 25 Nov 2017 10:09:57 +0200</pubDate>
      
      <guid>/2017/11/25/microsoft-sql-server-r-services---internals-xiv/</guid>
      <description>&lt;p&gt;This is the 15:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 14:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, after a couple of false starts this post will look into the protocol used when transferring data back and forth between SQL Server and the SqlSatellite: &lt;strong&gt;Binary eXchange Language&lt;/strong&gt; (&lt;strong&gt;BXL&lt;/strong&gt;). Why write about it at all? Well, the big reason why I wanted to know more about it, was due to the strange packet sizes I saw when inspecting data being sent from SQL Server to the SqlSatellite: one row with 5 numeric columns had a packet size of 6300 bytes!!!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XIII</title>
      <link>/2017/11/11/microsoft-sql-server-r-services---internals-xiii/</link>
      <pubDate>Sat, 11 Nov 2017 20:02:50 +0200</pubDate>
      
      <guid>/2017/11/11/microsoft-sql-server-r-services---internals-xiii/</guid>
      <description>&lt;p&gt;This is the fourteenth post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the thirteenth post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sorry guys, in my last post &lt;a href=&#34;/2017/10/31/microsoft-sql-server-r-services---internals-xii/&#34;&gt;Internals - XII&lt;/a&gt; I said we&amp;rsquo;d - in this post - look into the &lt;strong&gt;Binary eXchange Language&lt;/strong&gt; protocol(&lt;strong&gt;BXL&lt;/strong&gt;) which is used when sending data from SQL Server to the SqlSatellite. The protocol is also involved when we send  one row of data containing 5 integers, and the packet size for that ends up being 6300 bytes.&lt;/p&gt;

&lt;p&gt;Well, we won&amp;rsquo;t look at that in this post, I was once again led astray when researching how data is sent.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XII</title>
      <link>/2017/10/31/microsoft-sql-server-r-services---internals-xii/</link>
      <pubDate>Tue, 31 Oct 2017 19:57:36 +0200</pubDate>
      
      <guid>/2017/10/31/microsoft-sql-server-r-services---internals-xii/</guid>
      <description>&lt;p&gt;This is the 13:th post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the 12:th post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The last few posts in this series has been about communication between SQL Server and SqlSatellite. We have discussed the connection between the two, and we have also seen how packets are sent from SQL Server to SqlSatellite. In this post we&amp;rsquo;ll continue looking at what causes the packets to be send and what sends them. We will specifically look at the packet containing the external script, as well as the packet that contains the data (&lt;code&gt;@input_data_set_1&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>