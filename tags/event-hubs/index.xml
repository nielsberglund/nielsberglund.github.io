<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event Hubs on Niels Berglund</title>
    <link>/tags/event-hubs/</link>
    <description>Recent content in Event Hubs on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 02 Jan 2022 09:48:17 +0200</lastBuildDate>
    
	<atom:link href="/tags/event-hubs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Use Kafka Client with Azure Event Hubs</title>
      <link>/2022/01/02/how-to-use-kafka-client-with-azure-event-hubs/</link>
      <pubDate>Sun, 02 Jan 2022 09:48:17 +0200</pubDate>
      
      <guid>/2022/01/02/how-to-use-kafka-client-with-azure-event-hubs/</guid>
      <description>&lt;p&gt;This blog post came by, by accident, lol. A couple of weeks ago, I started to prepare for a webinar: &lt;a href=&#34;https://www.meetup.com/SQLCape-Meetup/events/282241220/&#34;&gt;&lt;strong&gt;Analyze Billions of Rows of Data in Real-Time Using Azure Data Explorer&lt;/strong&gt;&lt;/a&gt;. One of the demos in that webinar is about ingesting data from Apache Kafka into &lt;strong&gt;Azure Data Explorer&lt;/strong&gt;. When prepping, I noticed that my Confluent Cloud Kafka cluster didn&amp;rsquo;t exist anymore, so I had to come up with a workaround. That workaround was to use &lt;strong&gt;Azure Event Hubs&lt;/strong&gt; instead of Kafka.&lt;/p&gt;

&lt;p&gt;Since I already had the code to publish data to Kafka and knew that you could use the Kafka client to publish to Event Hubs, I thought I&amp;rsquo;d test it out. I did run into some minor snags along the way, so I thought I&amp;rsquo;d write a blog post about it. Then, at least, I have something to go back to. This post also looks at how to set up an Event Hubs cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>