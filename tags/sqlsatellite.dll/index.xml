<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sqlsatellite.dll on Niels Berglund</title>
    <link>/tags/sqlsatellite.dll/</link>
    <description>Recent content in Sqlsatellite.dll on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 11 Nov 2017 20:02:50 +0200</lastBuildDate>
    
	<atom:link href="/tags/sqlsatellite.dll/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Microsoft SQL Server R Services - Internals XIII</title>
      <link>/2017/11/11/microsoft-sql-server-r-services---internals-xiii/</link>
      <pubDate>Sat, 11 Nov 2017 20:02:50 +0200</pubDate>
      
      <guid>/2017/11/11/microsoft-sql-server-r-services---internals-xiii/</guid>
      <description>&lt;p&gt;This is the fourteenth post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the thirteenth post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sorry guys, in my last post &lt;a href=&#34;/2017/10/31/microsoft-sql-server-r-services---internals-xii/&#34;&gt;Internals - XII&lt;/a&gt; I said we&amp;rsquo;d - in this post - look into the &lt;strong&gt;Binary eXchange Language&lt;/strong&gt; protocol(&lt;strong&gt;BXL&lt;/strong&gt;) which is used when sending data from SQL Server to the SqlSatellite. The protocol is also involved when we send  one row of data containing 5 integers, and the packet size for that ends up being 6300 bytes.&lt;/p&gt;

&lt;p&gt;Well, we won&amp;rsquo;t look at that in this post, I was once again led astray when researching how data is sent.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server R Services - Internals IX</title>
      <link>/2017/08/18/microsoft-sql-server-r-services---internals-ix/</link>
      <pubDate>Fri, 18 Aug 2017 17:44:22 +0200</pubDate>
      
      <guid>/2017/08/18/microsoft-sql-server-r-services---internals-ix/</guid>
      <description>&lt;p&gt;This is the tenth post in a series about &lt;strong&gt;Microsoft SQL Server R Services&lt;/strong&gt;, and the ninth post that drills down into the internal of how it works. To see other posts (including this) in the series, go to &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;&lt;strong&gt;SQL Server R Services&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are now nearing the end of the Internals part of this series (you probably say &amp;ldquo;about time&amp;rdquo;). When I started this series way back in March this year, I thought that the Internals would be two, maximum three episodes. Boy was I wrong!&lt;/p&gt;

&lt;p&gt;In this post we&amp;rsquo;ll look at how the various components are communicating with each other.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>