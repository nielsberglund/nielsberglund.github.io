<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure Data Explorer on Niels Berglund</title>
    <link>https://nielsberglund.com/categories/azure-data-explorer/</link>
    <description>Recent content in Azure Data Explorer on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Feb 2023 09:40:43 +0200</lastBuildDate><atom:link href="https://nielsberglund.com/categories/azure-data-explorer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Develop a Real-Time Leaderboard Using Kafka and Azure Data Explorer - Prelude</title>
      <link>https://nielsberglund.com/post/2023-02-26-develop-a-real-time-leaderboard-using-kafka-and-azure-data-explorer---prelude/</link>
      <pubDate>Sun, 26 Feb 2023 09:40:43 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2023-02-26-develop-a-real-time-leaderboard-using-kafka-and-azure-data-explorer---prelude/</guid>
      <description>&lt;p&gt;This blog post series is inspired by my conference talk &lt;a href=&#34;https://youtu.be/rA3iZlZ8YOw&#34;&gt;&lt;strong&gt;Analyze Billions of Rows of Data in Real-Time Using Azure Data Explorer&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the presentation, I talk about &amp;ldquo;user-facing&amp;rdquo; analytics. Historically analytics has been limited to a small set of users in an organization (think the C-suite, power users, etc.). User-facing analytics changes that and makes analytics available to the end-users. An example of &amp;ldquo;user-facing analytics&amp;rdquo; is LinkedIn&amp;rsquo;s: &amp;ldquo;Who&amp;rsquo;s viewed your profile&amp;rdquo;. Another example is leaderboards, which are popular in online gaming.&lt;/p&gt;
&lt;p&gt;Since I work for a company (&lt;a href=&#34;https://nielsberglund.com/derivco&#34;&gt;Derivco&lt;/a&gt;) that develops systems for the iGaming industry, this series looks at the basics of a real-time leaderboard for online gaming using Kafka and &lt;strong&gt;Azure Data Explorer&lt;/strong&gt; (ADX).&lt;/p&gt;
&lt;p&gt;Initially, I thought one post would cover this, but I quickly realized one post covering everything would be way too long. Therefore, I am splitting this topic into multiple posts, and in this post, I look at Kafka and event generation.&lt;/p&gt;
&lt;p&gt;Arguably, this first post has little to do with ADX, which is why the title says &lt;strong&gt;Prelude&lt;/strong&gt; ðŸ˜„. Still, it is important because it sets up the publishing mechanism, which can be reused for anything else you want to do.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Ingest Into Azure Data Explorer From Apache Kafka using Kafka Connect</title>
      <link>https://nielsberglund.com/post/2021-10-27-how-to-ingest-into-azure-data-explorer-from-apache-kafka-using-kafka-connect/</link>
      <pubDate>Wed, 27 Oct 2021 14:13:37 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-10-27-how-to-ingest-into-azure-data-explorer-from-apache-kafka-using-kafka-connect/</guid>
      <description>&lt;p&gt;If you follow my blog, you probably know that I am a huge fan of &lt;strong&gt;Apache Kafka&lt;/strong&gt; and event streaming/stream processing. Recently &lt;strong&gt;Azure Data Explorer&lt;/strong&gt; (&lt;strong&gt;ADX&lt;/strong&gt;) has caught my eye. In fact, in the last few weeks, I did two conference sessions about ADX. A month ago, I published a blog post related to Kafka and ADX: &lt;a href=&#34;https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/&#34;&gt;&lt;strong&gt;Run Self-Managed Kusto Kafka Connector Serverless in Azure Container Instances&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the title of that post implies, it looked at the ADX Kafka sink connector and how to run it in Azure. What the post did not look at was how to configure the connector and connect it to ADX. That is what we will do in this post (and maybe in a couple of more posts).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Run Self-Managed Kusto Kafka Connector Serverless in Azure Container Instances</title>
      <link>https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/</link>
      <pubDate>Mon, 06 Sep 2021 06:11:51 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/</guid>
      <description>&lt;p&gt;A couple of weeks ago, I &lt;a href=&#34;https://nielsberglund.com/post/2021-08-14-run-confluent-cloud--serverless-apache-kafka-on-azure/&#34;&gt;posted&lt;/a&gt; how I set up Kafka to run serverless in Azure by deploying Confluent Cloud.&lt;/p&gt;
&lt;p&gt;If you have followed my blog lately, you have probably seen that I am interested in &lt;strong&gt;Azure Data Explorer&lt;/strong&gt; and that I have a couple of conference talks coming. One being:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to do Real-Time Analytics Using Apache Kafka and Azure Data Explorer&lt;/strong&gt;: We are looking at how to stream events from Apache Kafka to Azure Data Explorer (ADX) and perform user-facing analytics in near real-time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The question is how to connect Kafka with ADX? You normally connect Kafka with another system using a Kafka Connect connector, and fortunately a connector exists for connecting Kafka with ADX: the &lt;a href=&#34;https://github.com/Azure/kafka-sink-azure-kusto&#34;&gt;&lt;strong&gt;Kafka Connect Kusto Sink Connector&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, since I am running managed Kafka (Confluent Cloud, remember), I need a managed connector to run it in Confluent Cloud&amp;rsquo;s Kafka Connect. In the previous paragraph, I mentioned I was fortunate as we had a Kafka connector for ADX. Unfortunately, it is not a managed connector, so I cannot run it in Confluent Cloud - bummer!&lt;/p&gt;
&lt;p&gt;So, this post looks at the various options we have if we want to use the Kafka Connect Kusto Sink Connector connecting Confluent Cloud in Azure with Azure Data Explorer. However, if you are not interested in neither Kafka nor ADX, the post may still be of use for you. The reason being it also covers running Docker images in Azure Container Instances (ACI).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
