<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql Server Machine Learning Services on Niels Berglund</title>
    <link>/categories/sql-server-machine-learning-services/</link>
    <description>Recent content in Sql Server Machine Learning Services on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 26 May 2019 07:20:09 +0200</lastBuildDate>
    
	<atom:link href="/categories/sql-server-machine-learning-services/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java &amp; SQL Server 2019 Extensibility Framework: The Sequel</title>
      <link>/2019/05/26/java--sql-server-2019-extensibility-framework-the-sequel/</link>
      <pubDate>Sun, 26 May 2019 07:20:09 +0200</pubDate>
      
      <guid>/2019/05/26/java--sql-server-2019-extensibility-framework-the-sequel/</guid>
      <description>&lt;p&gt;As you may know, a while back I wrote some posts about the support for Java in SQL Server 2019: &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;. The posts covered in some detail how Java in SQL Server worked, and how to write Java code for use in SQL Server. However, a week or two ago &amp;ldquo;the sky came tumbling down&amp;rdquo; when Microsoft released SQL Server 2019 CTP 2.5.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; CTP stands for Community Technology Preview and is like a beta release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What Microsoft did in CTP 2.5 was to introduce Java Language Extension SDK, and your Java code now needs to inherit an abstract base class from the SDK. This requirement makes a large part of my previous posts &amp;ldquo;null and void&amp;rdquo;, so in this post, we look at what to do going forward.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing R Packages in SQL Server Machine Learning Services - IV: Permissions</title>
      <link>/2019/04/21/installing-r-packages-in-sql-server-machine-learning-services---iv-permissions/</link>
      <pubDate>Sun, 21 Apr 2019 11:15:19 +0200</pubDate>
      
      <guid>/2019/04/21/installing-r-packages-in-sql-server-machine-learning-services---iv-permissions/</guid>
      <description>&lt;p&gt;This post is the fourth in a series about installing R packages in &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; (SQL Server ML Services). To see all posts in the series go to &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;&lt;strong&gt;Install R Packages in SQL Server ML Services Series&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why this series came about is a colleague of mine &lt;a href=&#34;https://www.linkedin.com/in/dane-bax/&#34;&gt;Dane&lt;/a&gt; pinged me and asked if I had any advice as he had issues installing an R package into one of their SQL Server instances. I tried to help him and then thought it would make a good topic for a blog post. Of course, at that time I didn&amp;rsquo;t think it would be more posts than one, but here we are.&lt;/p&gt;

&lt;p&gt;In this post, we look at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What permissions &lt;code&gt;CREATE EXTERNAL LIBRARY&lt;/code&gt; requires.&lt;/li&gt;
&lt;li&gt;The ability to create external libraries with different owners and what impact it has.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing R Packages in SQL Server Machine Learning Services - III</title>
      <link>/2019/04/10/installing-r-packages-in-sql-server-machine-learning-services---iii/</link>
      <pubDate>Wed, 10 Apr 2019 06:36:16 +0200</pubDate>
      
      <guid>/2019/04/10/installing-r-packages-in-sql-server-machine-learning-services---iii/</guid>
      <description>&lt;p&gt;This post is the third in a series about installing R packages in &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; (SQL Server ML Services). To see all posts in the series go to &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;&lt;strong&gt;Install R Packages in SQL Server ML Services Series&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why this series came about is a colleague of mine &lt;a href=&#34;https://www.linkedin.com/in/dane-bax/&#34;&gt;Dane&lt;/a&gt; pinged me and asked if I had any advice as he had issues installing an R package into one of their SQL Server instances. I tried to help him and then thought it would make a good topic for a blog post. Of course, at that time I didn&amp;rsquo;t think it would be more posts than one, but here we are.&lt;/p&gt;

&lt;p&gt;In this post, we look at how we can use T-SQL and DDL commands to install packages in a remote SQL Server.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019, Java &amp; External Libraries - II</title>
      <link>/2019/03/17/sql-server-2019-java--external-libraries---ii/</link>
      <pubDate>Sun, 17 Mar 2019 17:13:45 +0200</pubDate>
      
      <guid>/2019/03/17/sql-server-2019-java--external-libraries---ii/</guid>
      <description>&lt;p&gt;This post is part of the &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt; series of posts, and it is the second post discussing SQL Server 2019, Java and the creation and use of external libraries.&lt;/p&gt;

&lt;p&gt;In the previous post about external libraries, we said that they were beneficial as they reduced complexities when deploying code, but there were still some caveats. So, in this post, we look at how to overcome those caveats&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 &amp; Java with Visual Studio Code</title>
      <link>/2019/01/17/sql-server-2019--java-with-visual-studio-code/</link>
      <pubDate>Thu, 17 Jan 2019 06:16:42 +0200</pubDate>
      
      <guid>/2019/01/17/sql-server-2019--java-with-visual-studio-code/</guid>
      <description>&lt;p&gt;As you know, SQL Server 2019 introduces the Java language extensions as part of the &lt;strong&gt;SQL Server Extensibility Framework&lt;/strong&gt;. The Java language extensions make it possible to execute Java code from inside SQL Server, the same way we can run R/Python code. Seeing that I am &amp;ldquo;somewhat&amp;rdquo; interested in the &lt;strong&gt;SQL Server Extensibility Framework&lt;/strong&gt; I wrote some posts about the Java language extensions: &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The code in the posts is very, very simplistic where I was just trying to get the ideas across how and what to do. Another reason the code is simplistic is that I am not a Java &amp;ldquo;person&amp;rdquo;; in fact, the only Java code I have ever written is what is in those posts. Me not being a Java &amp;ldquo;person&amp;rdquo; I do not have a Java IDE, (for the code I wrote I did not need one either), so I used my regular text editor &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text 3&lt;/a&gt;, and I compiled the code from command line (&lt;code&gt;$ javac ...&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;I then started on a new Java post (which I have not finished yet), and it became clear I needed an IDE, (intelli-sense, debug, etc.), but which IDE?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Extensibility Framework &amp; Java - Misc. &#39;Stuff&#39;</title>
      <link>/2018/12/30/sql-server-2019-extensibility-framework--java---misc.-stuff/</link>
      <pubDate>Sun, 30 Dec 2018 12:24:53 +0200</pubDate>
      
      <guid>/2018/12/30/sql-server-2019-extensibility-framework--java---misc.-stuff/</guid>
      <description>&lt;p&gt;This post is the fourth post in a series where I look at the Java extension in SQL Server, i.e. the ability to execute Java code from inside SQL Server.&lt;/p&gt;

&lt;p&gt;To see what other posts there are in the series, go to &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This fourth post acts as a &amp;ldquo;roundup&amp;rdquo; of miscellaneous &amp;ldquo;stuff&amp;rdquo; I did not cover in the three previous posts, and some of the things we look at are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Java packages.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;CLASSPATH&lt;/code&gt; environment variable.&lt;/li&gt;
&lt;li&gt;JAR files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, let us get into it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server ML Services - Multiple Input Data Sets</title>
      <link>/2018/12/24/sql-server-ml-services---multiple-input-data-sets/</link>
      <pubDate>Mon, 24 Dec 2018 06:51:12 +0200</pubDate>
      
      <guid>/2018/12/24/sql-server-ml-services---multiple-input-data-sets/</guid>
      <description>&lt;p&gt;This post came about due to a question on the &lt;a href=&#34;https://social.msdn.microsoft.com/Forums/en-US/home?forum=MicrosoftR&#34;&gt;Microsoft Machine Learning Server&lt;/a&gt; forum. The &lt;a href=&#34;https://social.msdn.microsoft.com/Forums/en-US/70e3577c-58f1-40af-9f0b-546c8b181cfa/sql-server-r-services-are-more-input-datasets-planned-or-under-development?forum=MicrosoftR&#34;&gt;question&lt;/a&gt; was if there are any plans by Microsoft to support more the one input dataset (&lt;code&gt;@input_data_1&lt;/code&gt;) in &lt;code&gt;sp_execute_external_script&lt;/code&gt;. My immediate reaction was that if you want more than one dataset, you can always connect from the script back into the database, and retrieve data.&lt;/p&gt;

&lt;p&gt;However, the poster was well aware of that, but due to certain reasons he did not want to do it that way - he wanted to push in the data, fair enough. When I read this, I seemed to remember something from a while ago, where, instead of retrieving data from inside the script, they pushed in the data, serialized it as an output parameter and then used the binary representation as in input parameter (yeah - this sounds confusing, but bear with me). I did some research (read Googling), and found &lt;a href=&#34;https://stackoverflow.com/questions/42918990/how-to-pass-two-sql-tables-as-input-parameter-for-r-codes-in-sql-server&#34;&gt;this&lt;/a&gt; StackOverflow question, and answer. So for future questions, and for me to remember, I decided to write a blog post about it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Extensibility Framework &amp; Java - Null Values</title>
      <link>/2018/12/19/sql-server-2019-extensibility-framework--java---null-values/</link>
      <pubDate>Wed, 19 Dec 2018 17:12:39 +0200</pubDate>
      
      <guid>/2018/12/19/sql-server-2019-extensibility-framework--java---null-values/</guid>
      <description>&lt;p&gt;This post is the third post in a series where I look at the Java extension in SQL Server, i.e. the ability to execute Java code from inside SQL Server.&lt;/p&gt;

&lt;p&gt;To see what other posts there are in the series, go to &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post we look at something related to the &lt;a href=&#34;/2018/12/08/sql-server-2019-extensibility-framework--java---passing-data/&#34;&gt;data passing post&lt;/a&gt;; how to handle null values.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Extensibility Framework &amp; Java - Passing Data</title>
      <link>/2018/12/08/sql-server-2019-extensibility-framework--java---passing-data/</link>
      <pubDate>Sat, 08 Dec 2018 19:52:11 +0200</pubDate>
      
      <guid>/2018/12/08/sql-server-2019-extensibility-framework--java---passing-data/</guid>
      <description>&lt;p&gt;This post is the second post in a series about SQL Server 2019 Extensibility Framework and the Java language extensions. In the first post, &lt;a href=&#34;/2018/12/02/sql-server-2019-extensibility-framework--java---hello-world/&#34;&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java - Hello World&lt;/a&gt;, we looked at how to install and enable the Java language extensions, and we also wrote some pretty basic Java code to ensure it all worked.&lt;/p&gt;

&lt;p&gt;To see what other posts there are in the series, go to &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post we look at how we can pass data back and forth between SQL Server and Java.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Extensibility Framework &amp; Java - Hello World</title>
      <link>/2018/12/02/sql-server-2019-extensibility-framework--java---hello-world/</link>
      <pubDate>Sun, 02 Dec 2018 09:36:34 +0200</pubDate>
      
      <guid>/2018/12/02/sql-server-2019-extensibility-framework--java---hello-world/</guid>
      <description>&lt;p&gt;The SQL Server 2016 release introduced the &lt;strong&gt;SQL Server Extensibility Framework&lt;/strong&gt; (EF), which gives us the ability to, from inside SQL Server, execute code in an external language runtime environment. SQL Server 2016 supports R as external runtime, and Microsoft added Python to supported runtimes in the SQL Server 2017 release. The important part about the EF is that the runtime is outside of the core database engine, but we call it from inside SQL Server via the stored procedure &lt;code&gt;sp_execute_external_script&lt;/code&gt;. We can push data from SQL Server queries to the external runtime, and consume data, (resultsets, output parameters) from the external runtime back in SQL Server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You can read more about the actual implementation of the external runtimes and &lt;code&gt;sp_execute_external_script&lt;/code&gt; in my &lt;a href=&#34;/sql_server_2k16_r_services&#34;&gt;SQL Server R Services Series&lt;/a&gt; posts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In SQL Server 2019 Microsoft added the ability to execute custom Java code along the same lines we execute R and Python, and this blog post intends to give an introduction of how to install and enable the Java extension, as well as execute some very basic Java code. In future posts, I drill down how to pass data back and forth between SQL Server and Java.&lt;/p&gt;

&lt;p&gt;To see what other posts there are in the series, go to &lt;a href=&#34;/s2k19_ext_framework_java&#34;&gt;&lt;strong&gt;SQL Server 2019 Extensibility Framework &amp;amp; Java&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>