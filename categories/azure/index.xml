<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on Niels Berglund</title>
    <link>https://nielsberglund.com/categories/azure/</link>
    <description>Recent content in Azure on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Jan 2022 09:48:17 +0200</lastBuildDate><atom:link href="https://nielsberglund.com/categories/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use Kafka Client with Azure Event Hubs</title>
      <link>https://nielsberglund.com/post/2022-01-02-how-to-use-kafka-client-with-azure-event-hubs/</link>
      <pubDate>Sun, 02 Jan 2022 09:48:17 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2022-01-02-how-to-use-kafka-client-with-azure-event-hubs/</guid>
      <description>&lt;p&gt;This blog post came by, by accident, lol. A couple of weeks ago, I started to prepare for a webinar: &lt;a href=&#34;https://www.meetup.com/SQLCape-Meetup/events/282241220/&#34;&gt;&lt;strong&gt;Analyze Billions of Rows of Data in Real-Time Using Azure Data Explorer&lt;/strong&gt;&lt;/a&gt;. One of the demos in that webinar is about ingesting data from Apache Kafka into &lt;strong&gt;Azure Data Explorer&lt;/strong&gt;. When prepping, I noticed that my Confluent Cloud Kafka cluster didn&amp;rsquo;t exist anymore, so I had to come up with a workaround. That workaround was to use &lt;strong&gt;Azure Event Hubs&lt;/strong&gt; instead of Kafka.&lt;/p&gt;
&lt;p&gt;Since I already had the code to publish data to Kafka and knew that you could use the Kafka client to publish to Event Hubs, I thought I&amp;rsquo;d test it out. I did run into some minor snags along the way, so I thought I&amp;rsquo;d write a blog post about it. Then, at least, I have something to go back to. This post also looks at how to set up an Event Hubs cluster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Ingest Into Azure Data Explorer From Apache Kafka using Kafka Connect</title>
      <link>https://nielsberglund.com/post/2021-10-27-how-to-ingest-into-azure-data-explorer-from-apache-kafka-using-kafka-connect/</link>
      <pubDate>Wed, 27 Oct 2021 14:13:37 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-10-27-how-to-ingest-into-azure-data-explorer-from-apache-kafka-using-kafka-connect/</guid>
      <description>&lt;p&gt;If you follow my blog, you probably know that I am a huge fan of &lt;strong&gt;Apache Kafka&lt;/strong&gt; and event streaming/stream processing. Recently &lt;strong&gt;Azure Data Explorer&lt;/strong&gt; (&lt;strong&gt;ADX&lt;/strong&gt;) has caught my eye. In fact, in the last few weeks, I did two conference sessions about ADX. A month ago, I published a blog post related to Kafka and ADX: &lt;a href=&#34;https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/&#34;&gt;&lt;strong&gt;Run Self-Managed Kusto Kafka Connector Serverless in Azure Container Instances&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the title of that post implies, it looked at the ADX Kafka sink connector and how to run it in Azure. What the post did not look at was how to configure the connector and connect it to ADX. That is what we will do in this post (and maybe in a couple of more posts).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Run Self-Managed Kusto Kafka Connector Serverless in Azure Container Instances</title>
      <link>https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/</link>
      <pubDate>Mon, 06 Sep 2021 06:11:51 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-09-06-run-self-managed-kafka-connector-in-serverless-azure-container-instance/</guid>
      <description>&lt;p&gt;A couple of weeks ago, I &lt;a href=&#34;https://nielsberglund.com/post/2021-08-14-run-confluent-cloud--serverless-apache-kafka-on-azure/&#34;&gt;posted&lt;/a&gt; how I set up Kafka to run serverless in Azure by deploying Confluent Cloud.&lt;/p&gt;
&lt;p&gt;If you have followed my blog lately, you have probably seen that I am interested in &lt;strong&gt;Azure Data Explorer&lt;/strong&gt; and that I have a couple of conference talks coming. One being:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to do Real-Time Analytics Using Apache Kafka and Azure Data Explorer&lt;/strong&gt;: We are looking at how to stream events from Apache Kafka to Azure Data Explorer (ADX) and perform user-facing analytics in near real-time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The question is how to connect Kafka with ADX? You normally connect Kafka with another system using a Kafka Connect connector, and fortunately a connector exists for connecting Kafka with ADX: the &lt;a href=&#34;https://github.com/Azure/kafka-sink-azure-kusto&#34;&gt;&lt;strong&gt;Kafka Connect Kusto Sink Connector&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, since I am running managed Kafka (Confluent Cloud, remember), I need a managed connector to run it in Confluent Cloud&amp;rsquo;s Kafka Connect. In the previous paragraph, I mentioned I was fortunate as we had a Kafka connector for ADX. Unfortunately, it is not a managed connector, so I cannot run it in Confluent Cloud - bummer!&lt;/p&gt;
&lt;p&gt;So, this post looks at the various options we have if we want to use the Kafka Connect Kusto Sink Connector connecting Confluent Cloud in Azure with Azure Data Explorer. However, if you are not interested in neither Kafka nor ADX, the post may still be of use for you. The reason being it also covers running Docker images in Azure Container Instances (ACI).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Run Confluent Cloud &amp; Serverless Apache Kafka on Azure</title>
      <link>https://nielsberglund.com/post/2021-08-14-run-confluent-cloud--serverless-apache-kafka-on-azure/</link>
      <pubDate>Sat, 14 Aug 2021 12:58:24 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-08-14-run-confluent-cloud--serverless-apache-kafka-on-azure/</guid>
      <description>&lt;p&gt;For readers of my blog, it should not come as a surprise that I think Apache Kafka is &lt;a href=&#34;https://www.merriam-webster.com/dictionary/the%20best%2Fgreatest%20thing%20since%20sliced%20bread&#34;&gt;&amp;ldquo;the greatest thing since sliced bread&amp;rdquo;&lt;/a&gt;, and I have written &lt;a href=&#34;https://nielsberglund.com/categories/kafka/&#34;&gt;some posts&lt;/a&gt; about it. The posts I have written has been geared towards the setup/deployment of Kafka, with a Windows/.NET slant to it. This post is in the same vein; how to set up Kafka but in the cloud.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;conference season&amp;rdquo; is upon us, and I have some conference talks coming up. This year quite a lot of what I am talking about is in the cloud, specifically Azure. As some of the talks involve Apache Kafka, I thought it would be good if Kafka also ran in the cloud. Sure, I could always run Kafka on Docker on a VM in the cloud, but &amp;ldquo;they&amp;rdquo; say serverless is the new &amp;ldquo;in&amp;rdquo; thing, as well as managed services, so why not try that out.&lt;/p&gt;
&lt;p&gt;So, this post is about how to deploy Confluent Cloud on Azure!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How To Install SQL Server on an Azure VM</title>
      <link>https://nielsberglund.com/post/2021-02-14-how-to-install-sql-server-on-an-azure-vm/</link>
      <pubDate>Sun, 14 Feb 2021 09:17:27 +0200</pubDate>
      
      <guid>https://nielsberglund.com/post/2021-02-14-how-to-install-sql-server-on-an-azure-vm/</guid>
      <description>&lt;p&gt;A while ago, I wanted to do a quick test on a new SQL installation, and I wanted the SQL installation to be on a &amp;ldquo;pristine&amp;rdquo; server. I was not keen on creating a new virtual machine on my local dev-box, as for that I would need to create a VM image etc., and it seemed like too much hassle for a lazy person like me. The obvious choice then is to do it in the cloud. How hard can that be, what could possibly go wrong?!&lt;/p&gt;
&lt;p&gt;It turned out to not be as straight-forward as I thought it would be, but eventually, I managed to get it right. Since I probably need to do it again some time, I thought I&amp;rsquo;d write a post about it, so I have something to go back to. So here we go &amp;hellip;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
