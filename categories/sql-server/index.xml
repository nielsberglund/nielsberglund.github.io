<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql Server on Niels Berglund</title>
    <link>/categories/sql-server/</link>
    <description>Recent content in Sql Server on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 21 Apr 2019 11:15:19 +0200</lastBuildDate>
    
	<atom:link href="/categories/sql-server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing R Packages in SQL Server Machine Learning Services - IV: Permissions</title>
      <link>/2019/04/21/installing-r-packages-in-sql-server-machine-learning-services---iv-permissions/</link>
      <pubDate>Sun, 21 Apr 2019 11:15:19 +0200</pubDate>
      
      <guid>/2019/04/21/installing-r-packages-in-sql-server-machine-learning-services---iv-permissions/</guid>
      <description>&lt;p&gt;This post is the fourth in a series about installing R packages in &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; (SQL Server ML Services). To see all posts in the series go to &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;&lt;strong&gt;Install R Packages in SQL Server ML Services Series&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why this series came about is a colleague of mine &lt;a href=&#34;https://www.linkedin.com/in/dane-bax/&#34;&gt;Dane&lt;/a&gt; pinged me and asked if I had any advice as he had issues installing an R package into one of their SQL Server instances. I tried to help him and then thought it would make a good topic for a blog post. Of course, at that time I didn&amp;rsquo;t think it would be more posts than one, but here we are.&lt;/p&gt;

&lt;p&gt;In this post, we look at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What permissions &lt;code&gt;CREATE EXTERNAL LIBRARY&lt;/code&gt; requires.&lt;/li&gt;
&lt;li&gt;The ability to create external libraries with different owners and what impact it has.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing R Packages in SQL Server Machine Learning Services - III</title>
      <link>/2019/04/10/installing-r-packages-in-sql-server-machine-learning-services---iii/</link>
      <pubDate>Wed, 10 Apr 2019 06:36:16 +0200</pubDate>
      
      <guid>/2019/04/10/installing-r-packages-in-sql-server-machine-learning-services---iii/</guid>
      <description>&lt;p&gt;This post is the third in a series about installing R packages in &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; (SQL Server ML Services). To see all posts in the series go to &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;&lt;strong&gt;Install R Packages in SQL Server ML Services Series&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why this series came about is a colleague of mine &lt;a href=&#34;https://www.linkedin.com/in/dane-bax/&#34;&gt;Dane&lt;/a&gt; pinged me and asked if I had any advice as he had issues installing an R package into one of their SQL Server instances. I tried to help him and then thought it would make a good topic for a blog post. Of course, at that time I didn&amp;rsquo;t think it would be more posts than one, but here we are.&lt;/p&gt;

&lt;p&gt;In this post, we look at how we can use T-SQL and DDL commands to install packages in a remote SQL Server.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server ML Services - Multiple Input Data Sets</title>
      <link>/2018/12/24/sql-server-ml-services---multiple-input-data-sets/</link>
      <pubDate>Mon, 24 Dec 2018 06:51:12 +0200</pubDate>
      
      <guid>/2018/12/24/sql-server-ml-services---multiple-input-data-sets/</guid>
      <description>&lt;p&gt;This post came about due to a question on the &lt;a href=&#34;https://social.msdn.microsoft.com/Forums/en-US/home?forum=MicrosoftR&#34;&gt;Microsoft Machine Learning Server&lt;/a&gt; forum. The &lt;a href=&#34;https://social.msdn.microsoft.com/Forums/en-US/70e3577c-58f1-40af-9f0b-546c8b181cfa/sql-server-r-services-are-more-input-datasets-planned-or-under-development?forum=MicrosoftR&#34;&gt;question&lt;/a&gt; was if there are any plans by Microsoft to support more the one input dataset (&lt;code&gt;@input_data_1&lt;/code&gt;) in &lt;code&gt;sp_execute_external_script&lt;/code&gt;. My immediate reaction was that if you want more than one dataset, you can always connect from the script back into the database, and retrieve data.&lt;/p&gt;

&lt;p&gt;However, the poster was well aware of that, but due to certain reasons he did not want to do it that way - he wanted to push in the data, fair enough. When I read this, I seemed to remember something from a while ago, where, instead of retrieving data from inside the script, they pushed in the data, serialized it as an output parameter and then used the binary representation as in input parameter (yeah - this sounds confusing, but bear with me). I did some research (read Googling), and found &lt;a href=&#34;https://stackoverflow.com/questions/42918990/how-to-pass-two-sql-tables-as-input-parameter-for-r-codes-in-sql-server&#34;&gt;this&lt;/a&gt; StackOverflow question, and answer. So for future questions, and for me to remember, I decided to write a blog post about it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Big Data Cluster on Azure Kubernetes Service</title>
      <link>/2018/11/10/sql-server-2019-big-data-cluster-on-azure-kubernetes-service/</link>
      <pubDate>Sat, 10 Nov 2018 07:58:09 +0200</pubDate>
      
      <guid>/2018/11/10/sql-server-2019-big-data-cluster-on-azure-kubernetes-service/</guid>
      <description>&lt;p&gt;At the &lt;a href=&#34;https://www.microsoft.com/en-us/ignite/agenda&#34;&gt;&lt;strong&gt;Microsoft Ignite 2018&lt;/strong&gt;&lt;/a&gt; conference back in September Microsoft released &lt;strong&gt;SQL Server 2019&lt;/strong&gt; for public preview, and I wrote two short blog posts about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2018/09/24/what-is-new-in-sql-server-2019-public-preview/&#34;&gt;What is New in SQL Server 2019 Public Preview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2018/09/29/sql-server-2019-for-linux-in-docker-on-windows/&#34;&gt;SQL Server 2019 for Linux in Docker on Windows&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What Microsoft also announced was &lt;strong&gt;SQL Server 2019 Big Data Clusters&lt;/strong&gt;, which combines the SQL Server database engine, Spark, and HDFS into a unified data platform! Yes, you read that right: SQL Server, Spark, and Hadoop right out of the box. Seeing that both Spark and Hadoop are mainly Linux based, what makes the Big Data Cluster possible is &lt;strong&gt;SQL Server on Linux&lt;/strong&gt;. When you deploy a &lt;strong&gt;SQL Server 2019 Big Data Cluster&lt;/strong&gt;, you deploy it as containers on &lt;strong&gt;Kubernetes&lt;/strong&gt;, where the Kubernetes cluster can be in the cloud, such as &lt;a href=&#34;https://azure.microsoft.com/en-us/services/kubernetes-service/&#34;&gt;&lt;strong&gt;Azure Kubernetes Service&lt;/strong&gt;&lt;/a&gt;, or on-prem like &lt;a href=&#34;https://www.openshift.com/learn/topics/kubernetes/&#34;&gt;&lt;strong&gt;Red Hat OpenShift&lt;/strong&gt;&lt;/a&gt; or even on a local dev-box/laptop using &lt;a href=&#34;https://kubernetes.io/docs/setup/minikube/&#34;&gt;&lt;strong&gt;Minikube&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Initially, this post was about &lt;strong&gt;SQL Server 2019 Big Data Clusters&lt;/strong&gt; on Minikube, but after quite a few failed installation attempts I realised I did not have enough memory on my development box, so I decided to try it on &lt;strong&gt;Azure Kubernetes Service&lt;/strong&gt; (AKS) instead.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you want to run &lt;strong&gt;SQL Server 2019 Big Data Clusters&lt;/strong&gt; on Minikube it is suggested that your host machine (Minikube is essentially a VM) has at least 32Gb of memory, and you allocate at least 22Gb to the Minikube VM.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since I am a complete novice when it comes to Kubernetes, this post covers both how I set up AKS as well as the deployment of &lt;strong&gt;SQL Server 2019 Big Data Clusters&lt;/strong&gt; to AKS, and the post is somewhat a summary of the official &lt;a href=&#34;https://docs.microsoft.com/en-us/sql/big-data-cluster/big-data-cluster-overview?view=sqlallproducts-allversions&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Server 2019 for Linux in Docker on Windows</title>
      <link>/2018/09/29/sql-server-2019-for-linux-in-docker-on-windows/</link>
      <pubDate>Sat, 29 Sep 2018 12:06:09 +0200</pubDate>
      
      <guid>/2018/09/29/sql-server-2019-for-linux-in-docker-on-windows/</guid>
      <description>&lt;p&gt;By the time I publish this blog post &lt;a href=&#34;https://www.microsoft.com/en-us/ignite&#34;&gt;MS Ignite&lt;/a&gt; is over. During Ignite, Microsoft announced quite a few new things, amongst them &lt;strong&gt;SQL Server 2019&lt;/strong&gt; with a whole lot of new features and functionality.&lt;/p&gt;

&lt;p&gt;I touched briefly on some of them in my &lt;a href=&#34;/2018/09/24/what-is-new-in-sql-server-2019-public-preview/&#34;&gt;What is New in SQL Server 2019 Public Preview&lt;/a&gt; post. A couple of things that caught my eye were that &lt;strong&gt;SQL Server 2019 for Linux&lt;/strong&gt; now supports In-Database analytics, what we know as &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; (R and Python), as well as the Java language extension.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You may ask yourself what the Java language extension is; well, that is the ability to access Java code from T-SQL. It is a little bit like SQLCLR, but it executes outside of the SQL Server memory and process space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seeing that I never really have played around with &lt;em&gt;SQL Server for Linux&lt;/em&gt;, mostly due to that in previous versions (2017) it did not have support for In-Database analytics, I thought that now would be a good time to have a look.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is New in SQL Server 2019 Public Preview</title>
      <link>/2018/09/24/what-is-new-in-sql-server-2019-public-preview/</link>
      <pubDate>Mon, 24 Sep 2018 19:17:06 +0200</pubDate>
      
      <guid>/2018/09/24/what-is-new-in-sql-server-2019-public-preview/</guid>
      <description>&lt;p&gt;If you read my roundup for &lt;a href=&#34;/2018/09/23/interesting-stuff---week-38/&#34;&gt;week 38&lt;/a&gt;, which I published yesterday, you probably noticed that &lt;a href=&#34;https://www.microsoft.com/en-us/ignite&#34;&gt;&lt;strong&gt;MS Ignite&lt;/strong&gt;&lt;/a&gt; started today. I mentioned in the post that I was particularly interested in some of the &lt;strong&gt;SQL Server&lt;/strong&gt; sessions, as they looked very interesting.&lt;/p&gt;

&lt;p&gt;However, even before the sessions started, Microsoft released SQL Server 2019 CTP 2.0 for public preview and, naturally, I jumped on the &lt;a href=&#34;https://www.microsoft.com/en-us/evalcenter/evaluate-sql-server-2019-ctp&#34;&gt;download link&lt;/a&gt; and started downloading. I managed to get to the link in time before the rest of the world started the download, so I managed to get it down and then did an install.&lt;/p&gt;

&lt;p&gt;The rest of this post is about my initial findings mostly in the SQL Server Machine Learning Services space.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I have looked at SQL Server 2019 the grand total of an hour, so this is a short post.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sp_execute_external_script and SQL Compute Context - III</title>
      <link>/2018/08/04/sp_execute_external_script-and-sql-compute-context---iii/</link>
      <pubDate>Sat, 04 Aug 2018 16:05:46 +0200</pubDate>
      
      <guid>/2018/08/04/sp_execute_external_script-and-sql-compute-context---iii/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;/2018/03/21/microsoft-sql-server-r-services---sp_execute_external_script---iii/&#34;&gt;Microsoft SQL Server R Services - sp_execute_external_script - III&lt;/a&gt; post I wrote about &lt;code&gt;sp_execute_external_script&lt;/code&gt; (SPEES) and the &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt; (SQLCC). Afterwards I realised I had some things wrong, so I wrote a followup post: &lt;a href=&#34;/2018/05/20/sp_execute_external_script-and-sql-compute-context---i/&#34;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt; where I tried to correct my mistakes from the &lt;a href=&#34;/2018/03/21/microsoft-sql-server-r-services---sp_execute_external_script---iii/&#34;&gt;initial post&lt;/a&gt;. That post led to &lt;a href=&#34;/2018/07/07/sp_execute_external_script-and-sql-compute-context---ii/&#34;&gt;sp_execute_external_script and SQL Compute Context - II&lt;/a&gt; and now we have a mini-series.&lt;/p&gt;

&lt;p&gt;To see other posts (including this) in the series, go to &lt;a href=&#34;/spees_and_sql_compute_context&#34;&gt;&lt;strong&gt;sp_execute_external_script and SQL Server Compute Context&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the previous post in this series, we looked at how data is sent to the SqlSatellite from SQL Server when we are in the SQLCC. This post was meant to look at what goes on inside SQL Server when we execute in SQLCC, but I realised that it would make more sense if, before we look at the internal working when in SQLCC, I covered what happens when pulling data in the local context. So that is what this post is all about.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sp_execute_external_script and SQL Compute Context - II</title>
      <link>/2018/07/07/sp_execute_external_script-and-sql-compute-context---ii/</link>
      <pubDate>Sat, 07 Jul 2018 10:54:21 +0200</pubDate>
      
      <guid>/2018/07/07/sp_execute_external_script-and-sql-compute-context---ii/</guid>
      <description>&lt;p&gt;I wrote the post &lt;a href=&#34;/2018/05/20/sp_execute_external_script-and-sql-compute-context---i/&#34;&gt;sp_execute_external_script and SQL Compute Context - I&lt;/a&gt; about how the &lt;strong&gt;SQL Server Compute Context&lt;/strong&gt; (SQLCC) works with &lt;code&gt;sp_execute_external_script&lt;/code&gt; (SPEES), as I wanted to correct some mistakes I did in the &lt;a href=&#34;/2018/03/21/microsoft-sql-server-r-services---sp_execute_external_script---iii/&#34;&gt;Microsoft SQL Server R Services - sp_execute_external_script - III&lt;/a&gt; post. I initially thought one post would be enough, but quite soon I realised I was too optimistic, and at least one more post would be needed, if not more. So this is the first followup post about SPEES and SQLCC.&lt;/p&gt;

&lt;p&gt;To see other posts (including this) in the series, go to &lt;a href=&#34;/spees_and_sql_compute_context&#34;&gt;&lt;strong&gt;sp_execute_external_script and SQL Server Compute Context&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the reasons for me realising that one post is not enough is that while I wrote and executed code for the first &lt;a href=&#34;/2018/05/20/sp_execute_external_script-and-sql-compute-context---i/&#34;&gt;post&lt;/a&gt;, I noticed some fairly significant performance differences using SQLCC compared to not using SQLCC (SQLCC performed better :)). So that is part of what we look at in this post.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing R Packages in SQL Server Machine Learning Services - II</title>
      <link>/2018/06/30/installing-r-packages-in-sql-server-machine-learning-services---ii/</link>
      <pubDate>Sat, 30 Jun 2018 16:57:01 +0200</pubDate>
      
      <guid>/2018/06/30/installing-r-packages-in-sql-server-machine-learning-services---ii/</guid>
      <description>&lt;p&gt;This post is the second post in a series about installing R packages in SQL Server Machine Learning Services.&lt;/p&gt;

&lt;p&gt;To see all posts in the series go to &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;&lt;strong&gt;Install R Packages in SQL Server ML Services Series&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why this series came about is a colleague of mine &lt;a href=&#34;https://www.linkedin.com/in/dane-bax/&#34;&gt;Dane&lt;/a&gt; pinged me and asked if I had any advice as he had issues installing an R package into one of their SQL Server instances. I tried to help him and then thought it would make a good topic for a blog post. Of course, at that time I didn&amp;rsquo;t think it would be more posts than one, but here we are.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sp_execute_external_script and Permissions</title>
      <link>/2018/06/24/sp_execute_external_script-and-permissions/</link>
      <pubDate>Sun, 24 Jun 2018 14:36:36 +0200</pubDate>
      
      <guid>/2018/06/24/sp_execute_external_script-and-permissions/</guid>
      <description>&lt;p&gt;This post will (hopefully) be short and sweet. It came about as I was testing out &amp;ldquo;stuff&amp;rdquo; for the &lt;a href=&#34;/sql_server_ml_services_install_packages&#34;&gt;Install R Packages in SQL Server ML Services&lt;/a&gt; series of posts and I could not get it to work as I had expected.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>