<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql Server 2019 on Niels Berglund</title>
    <link>/categories/sql-server-2019/</link>
    <description>Recent content in Sql Server 2019 on Niels Berglund</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 24 Jan 2021 06:06:25 +0200</lastBuildDate>
    
	<atom:link href="/categories/sql-server-2019/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Server 2019 External Libraries and Your Python Runtime</title>
      <link>/2021/01/24/sql-server-2019-external-libraries-and-your-python-runtime/</link>
      <pubDate>Sun, 24 Jan 2021 06:06:25 +0200</pubDate>
      
      <guid>/2021/01/24/sql-server-2019-external-libraries-and-your-python-runtime/</guid>
      <description>&lt;p&gt;The last month or so I have written some blog posts about how Microsoft open-sourced the SQL Server language extensions for R and Python back in September 2020. These language extensions add to the Java extension which was open-sourced in March 2020. My posts have been about bringing your own Python runtime into SQL Server 2019, and the potential pitfalls you may encounter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2020/12/29/updated-bring-your-own-r--python-runtimes-to-sql-server-extensibility-framework/&#34;&gt;&lt;strong&gt;Bring Your Own R &amp;amp; Python Runtimes to SQL Server Extensibility Framework&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2021/01/05/updated-write-a-python-3.9-language-extension-for-sql-server-machine-learning-services/&#34;&gt;&lt;strong&gt;Write a Python 3.9 Language Extension for SQL Server Machine Learning Services&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2021/01/09/solve-python-issues-in-sql-server-machine-learning-services-after-deploying-python-3.9/&#34;&gt;&lt;strong&gt;Solve Python Issues in SQL Server Machine Learning Services After Deploying Python 3.9&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have touched upon the subject of the &lt;code&gt;PYTHONHOME&lt;/code&gt; environment variable in the posts, and I have said that it is not needed - &lt;strong&gt;UNLESS&lt;/strong&gt; you want to create Python external libraries.&lt;/p&gt;

&lt;p&gt;In this post, we look more at &lt;code&gt;PYTHONHOME&lt;/code&gt; and creating external libraries.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Solve Python Issues in SQL Server Machine Learning Services After Deploying Python 3.9</title>
      <link>/2021/01/09/solve-python-issues-in-sql-server-machine-learning-services-after-deploying-python-3.9/</link>
      <pubDate>Sat, 09 Jan 2021 11:38:09 +0200</pubDate>
      
      <guid>/2021/01/09/solve-python-issues-in-sql-server-machine-learning-services-after-deploying-python-3.9/</guid>
      <description>&lt;p&gt;In September 2020, Microsoft open-sourced SQL Server Machine Learning Services, (SQLMLS), language extensions for R and Python. If you want more information, here are some blog posts I have written about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2020/12/29/updated-bring-your-own-r--python-runtimes-to-sql-server-extensibility-framework/&#34;&gt;&lt;strong&gt;Bring Your Own R &amp;amp; Python Runtimes to SQL Server Extensibility Framework&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2021/01/05/updated-write-a-python-3.9-language-extension-for-sql-server-machine-learning-services/&#34;&gt;&lt;strong&gt;Write a Python 3.9 Language Extension for SQL Server Machine Learning Services&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;a href=&#34;/2021/01/05/updated-write-a-python-3.9-language-extension-for-sql-server-machine-learning-services/&#34;&gt;last post&lt;/a&gt;, which looks at using Python 3.9 in SQL Server Machine Learning Services, I wrote this at the very end:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It looks like all is good, but maybe not? In a future post we&amp;rsquo;ll look at an issue we have introduced - but for now, let us bask in the glory of having created a new Python language extension.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the post, we wrote a new language extension to handle Python 3.9, and that just worked fine. However, when I was doing some other things, I noticed some side effects, and in this post, we look at those side effects and how to solve them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The two posts mentioned above has been updated as a result of this post. If you now follow the posts above you may not see the errors we discuss here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UPDATED: Write a Python 3.9 Language Extension for SQL Server Machine Learning Services</title>
      <link>/2021/01/05/updated-write-a-python-3.9-language-extension-for-sql-server-machine-learning-services/</link>
      <pubDate>Tue, 05 Jan 2021 04:57:43 +0200</pubDate>
      
      <guid>/2021/01/05/updated-write-a-python-3.9-language-extension-for-sql-server-machine-learning-services/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This post has been updated after it was originally published. I have edited information about the &lt;code&gt;PYTHONHOME&lt;/code&gt; system variable, as well as &lt;code&gt;PATH&lt;/code&gt; requirements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my post, &lt;a href=&#34;/2020/12/29/updated-bring-your-own-r--python-runtimes-to-sql-server-extensibility-framework/&#34;&gt;&lt;strong&gt;Bring Your Own R &amp;amp; Python Runtimes to SQL Server Extensibility Framework&lt;/strong&gt;&lt;/a&gt; I wrote about how we can use other R and Python runtimes in SQL Server Machine Learning Services than the ones that come &amp;ldquo;out of the box&amp;rdquo;. In the post, I wrote that if you want to bring a Python runtime other than version 3.7.x, (like 3.8, 3.9, etc.), you need to build your own Python language extension, and we&amp;rsquo;d look at it in a future post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; For R and Java the existing language extension can be used regardless of R/Java version, (at least as far as I know).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I wrote we&amp;rsquo;d look at it in a future post I thought to myself; &amp;ldquo;how hard can it be?&amp;rdquo;. I had read the steps of how to build a Python language extension for Windows &lt;a href=&#34;https://github.com/microsoft/sql-server-language-extensions/tree/master/language-extensions/python&#34;&gt;here&lt;/a&gt;, and it didn&amp;rsquo;t seem that hard: some Boost, CMake, compile, and Bob&amp;rsquo;s your uncle! Well, it turned out it was somewhat more complicated than what I anticipated. So, if you are interested - read on!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build Boost.Python &amp; Numpy in Windows</title>
      <link>/2021/01/03/build-boost.python--numpy-in-windows/</link>
      <pubDate>Sun, 03 Jan 2021 13:50:55 +0200</pubDate>
      
      <guid>/2021/01/03/build-boost.python--numpy-in-windows/</guid>
      <description>&lt;p&gt;In this post, we look at how to build &lt;code&gt;Boost.Python&lt;/code&gt; and &lt;code&gt;Numpy&lt;/code&gt;. We look at it from a perspective where we want to use what we build as part of a bridge between SQL Server 2019 and Python. However, if you are not interested in SQL, the post should still give you some - hopefully - useful information.&lt;/p&gt;

&lt;p&gt;Please note that I am a SQL dude, and my knowledge of Boost, Python and Numpy is limited at best. So take this post for what it is; the steps I took to successfully build &lt;code&gt;Boost.Python&lt;/code&gt; and &lt;code&gt;Numpy&lt;/code&gt; on a Windows box.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UPDATED: Bring Your Own R &amp; Python Runtimes to SQL Server Extensibility Framework</title>
      <link>/2020/12/29/updated-bring-your-own-r--python-runtimes-to-sql-server-extensibility-framework/</link>
      <pubDate>Tue, 29 Dec 2020 12:47:45 +0200</pubDate>
      
      <guid>/2020/12/29/updated-bring-your-own-r--python-runtimes-to-sql-server-extensibility-framework/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This post has been updated after it was originally published. I have edited information about the &lt;code&gt;PYTHONHOME&lt;/code&gt; system variable, as well as &lt;code&gt;PATH&lt;/code&gt; requirements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back in the day I wrote quite a few blog posts about &lt;a href=&#34;https://nielsberglund.com/categories/sql-server-machine-learning-services/&#34;&gt;&lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt;&lt;/a&gt; as well as &lt;a href=&#34;https://nielsberglund.com/categories/sql-server-extensibility-framework/&#34;&gt;&lt;strong&gt;SQL Server Extensibility Framework&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&#34;https://nielsberglund.com/categories/sql-server-extensibility-framework/&#34;&gt;&lt;strong&gt;External Languages&lt;/strong&gt;&lt;/a&gt;. &lt;strong&gt;SQL Server Machine Learning Services&lt;/strong&gt; is very cool, but a complaint has been that you are restricted in what versions of R and Python you use.&lt;/p&gt;

&lt;p&gt;In September 2020, Microsoft &lt;a href=&#34;https://cloudblogs.microsoft.com/sqlserver/2020/09/24/open-sourcing-the-r-and-python-language-extensions-for-sql-server/&#34;&gt;announced&lt;/a&gt; that they have open-sourced the technology behind SQL Server Extensibility Framework. As a result, we can now bring our own versions of R and Python to SQL Server 2019.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; To bring your own R/Python you need SQL Server 2019 CU3 or above.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog post, we look at how to do that.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Lap Around SQL Server 2019 Big Data Cluster: Architecture</title>
      <link>/2020/12/21/a-lap-around-sql-server-2019-big-data-cluster-architecture/</link>
      <pubDate>Mon, 21 Dec 2020 09:18:00 +0200</pubDate>
      
      <guid>/2020/12/21/a-lap-around-sql-server-2019-big-data-cluster-architecture/</guid>
      <description>&lt;p&gt;This post is the second in series about &lt;strong&gt;SQL Server 2019 Big Data Cluster&lt;/strong&gt; based on a presentation I do: &lt;strong&gt;A Lap Around SQL Server 2019 Big Data Cluster&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the first post &lt;a href=&#34;/2020/04/26/a-lap-around-sql-server-2019-big-data-cluster-background--technology/&#34;&gt;&lt;strong&gt;A Lap Around SQL Server 2019 Big Data Cluster: Background &amp;amp; Technology&lt;/strong&gt;&lt;/a&gt; we looked at - as the title implies - the background of SQL Server 2019 Big Data Cluster, (BDC), and the technology behind it.&lt;/p&gt;

&lt;p&gt;In this post, we look at the architecture and components of a BDC.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Lap Around SQL Server 2019 Big Data Cluster: Background &amp; Technology</title>
      <link>/2020/04/26/a-lap-around-sql-server-2019-big-data-cluster-background--technology/</link>
      <pubDate>Sun, 26 Apr 2020 06:49:39 +0200</pubDate>
      
      <guid>/2020/04/26/a-lap-around-sql-server-2019-big-data-cluster-background--technology/</guid>
      <description>&lt;p&gt;You who read my blog have probably noticed some posts around &lt;strong&gt;SQL Server 2019 Big Data Cluster&lt;/strong&gt;, (BDC). You have also most likely seen me posting about giving conference talks and webinars around BDC.&lt;/p&gt;

&lt;p&gt;One of the presentations I do around BDC is named &amp;ldquo;A Lap Around SQL Server 2019 Big Data Cluster&amp;rdquo;, and I thought it would be a good idea to make a blog post around the presentation. Well, as per usual for me, &amp;ldquo;a blog post&amp;rdquo; becomes multiple posts.&lt;/p&gt;

&lt;p&gt;So, in this post, we look at the background to &lt;strong&gt;SQL Server 2019 Big Data Cluster&lt;/strong&gt;, the technology behind it, and a little bit around monitoring the cluster. In future posts, we look at architecture, data virtualization and other interesting bits and pieces.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>More PolyBase Issues in SQL Server 2019 Developers Edition</title>
      <link>/2019/12/30/more-polybase-issues-in-sql-server-2019-developers-edition/</link>
      <pubDate>Mon, 30 Dec 2019 18:26:55 +0200</pubDate>
      
      <guid>/2019/12/30/more-polybase-issues-in-sql-server-2019-developers-edition/</guid>
      <description>&lt;p&gt;A couple of weeks ago, I published the post &lt;a href=&#34;/2019/11/20/fix-polybase-in-sql-server-2019-developers-edition/&#34;&gt;&lt;strong&gt;Fix PolyBase in SQL Server 2019 Developers Edition&lt;/strong&gt;&lt;/a&gt;. In the post, I discussed how to fix an issue in SQL Server 2019 Developers edition, where the PolyBase services do not start up after installation.&lt;/p&gt;

&lt;p&gt;The fix in the post works fine, i.e. the services start after the fix. However some days after I published the post there was a question on a SQL Server 2019 forum, where the poster says he cannot create an external file format on the SQL Server 2019 Developer Edition. Sure enough, when I tried to do the same on my &amp;ldquo;fixed&amp;rdquo; instance, I could not either.&lt;/p&gt;

&lt;p&gt;So in this post, I look at how to fix that second issue.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Deploy SQL Server 2019 Big Data Cluster Using Azure Data Studio</title>
      <link>/2019/12/23/how-to-deploy-sql-server-2019-big-data-cluster-using-azure-data-studio/</link>
      <pubDate>Mon, 23 Dec 2019 19:35:36 +0200</pubDate>
      
      <guid>/2019/12/23/how-to-deploy-sql-server-2019-big-data-cluster-using-azure-data-studio/</guid>
      <description>&lt;p&gt;For you who follows my sporadic posts, you may wonder why I have yet another post, (YAP), covering how to deploy a &lt;strong&gt;SQL Server 2019 Big Data Cluster&lt;/strong&gt;, (BDC), using &lt;strong&gt;Azure Data Studio&lt;/strong&gt;, (ADS).&lt;/p&gt;

&lt;p&gt;The answer to that is that the version of BDC I deployed in &lt;a href=&#34;/2019/09/11/install-sql-server-2019-big-data-cluster-using-azure-data-studio/&#34;&gt;this&lt;/a&gt; post was a pre-release, and since then BDC has gone GA, (General Availability), and there are certain differences in deployment process between RC1, and RTM.&lt;/p&gt;

&lt;p&gt;So in this post let us look at how to deploy BDC RTM to Azure Kubernetes Service using ADS.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fix PolyBase in SQL Server 2019 Developers Edition</title>
      <link>/2019/11/20/fix-polybase-in-sql-server-2019-developers-edition/</link>
      <pubDate>Wed, 20 Nov 2019 05:52:17 +0200</pubDate>
      
      <guid>/2019/11/20/fix-polybase-in-sql-server-2019-developers-edition/</guid>
      <description>&lt;p&gt;At &lt;a href=&#34;https://www.microsoft.com/en-us/ignite&#34;&gt;MS Ignite&lt;/a&gt; in Orlando November 4 - 8, 2019, Microsoft announced the general availability of SQL Server 2019. At the same time, the SQL Server 2019 Developers Edition appeared as an MSDN download, and of course, I downloaded it and installed it on my dev box.&lt;/p&gt;

&lt;p&gt;After the installation, I noticed that PolyBase did not start up correctly, and I saw dump files all over the place. After some investigation, I figured out what the issue was, and this blog post describes the fix.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>